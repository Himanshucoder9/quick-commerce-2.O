# Generated by Django 4.2 on 2024-08-02 06:00

import Master.myvalidator
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('SU', 'Superuser'), ('WH', 'Warehouse'), ('CU', 'Customer'), ('DR', 'Driver')], max_length=2, verbose_name='role')),
                ('name', models.CharField(max_length=200, verbose_name='full name')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='email address')),
                ('phone', models.CharField(help_text='Alphabets and special characters are not allowed (eg.+911234567890).', max_length=13, unique=True, validators=[django.core.validators.RegexValidator(message='Mobile number must be in the format "+911234567890".', regex='^\\+\\d{1,13}$')], verbose_name='mobile number')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=6, null=True, verbose_name='gender')),
                ('profile', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='auth/user/profile/', verbose_name='profile photo')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=False, help_text='Unselect this instead of deleting accounts.', verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='CustomAdmin',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admin',
                'verbose_name_plural': 'Admins',
            },
            bases=('Auth.user',),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
            bases=('Auth.user',),
        ),
        migrations.CreateModel(
            name='WareHouse',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('building_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='building name')),
                ('street_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='street name')),
                ('zip', models.CharField(blank=True, max_length=100, null=True, verbose_name='zip code')),
                ('city', models.CharField(blank=True, max_length=200, null=True, verbose_name='city')),
                ('state', models.CharField(blank=True, max_length=250, null=True, verbose_name='state')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='longitude')),
                ('full_address', models.TextField(blank=True, null=True, verbose_name='full address')),
                ('warehouse_no', models.CharField(max_length=15, unique=True, verbose_name='warehouse id')),
                ('warehouse_name', models.CharField(max_length=100, verbose_name='registered warehouse name')),
                ('license', models.FileField(help_text='Upload license proof.', upload_to='auth/warehouse/license', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'png', 'jpg', 'jpeg', 'webp'])], verbose_name='license proof')),
                ('identity', models.CharField(choices=[('Aadhar Card', 'Aadhar Card'), ('Pan Card', 'Pan Card'), ('Driving Licence', 'Driving Licence'), ('Voter ID', 'Voter ID')], max_length=50, verbose_name='identity proof')),
                ('document', models.FileField(help_text='Upload Identity Document.', upload_to='auth/warehouse/identity', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'png', 'jpg', 'jpeg', 'webp'])], verbose_name='identity document')),
                ('gst_no', models.CharField(blank=True, max_length=15, null=True, validators=[Master.myvalidator.gst_validator], verbose_name='GSTIN number')),
                ('fssai_no', models.CharField(blank=True, max_length=15, null=True, verbose_name='FSSAI number')),
                ('operation_area', models.CharField(max_length=200, verbose_name='area of operation')),
                ('warehouse_image', imagekit.models.fields.ProcessedImageField(blank=True, help_text='Upload warehouse image.', null=True, upload_to='auth/warehouse/shop/', verbose_name='shop image')),
                ('warehouse_image_owner', imagekit.models.fields.ProcessedImageField(blank=True, help_text='Upload warehouse image with owner.', null=True, upload_to='auth/warehouse/shop_with_owner/', verbose_name='shop image with owner')),
                ('approved', models.BooleanField(default=False, verbose_name='Approved')),
            ],
            options={
                'verbose_name': 'Warehouse',
                'verbose_name_plural': 'Warehouses',
            },
            bases=('Auth.user', models.Model),
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.CharField(max_length=6, verbose_name='OTP')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'OTP',
                'verbose_name_plural': 'OTPs',
            },
        ),
        migrations.CreateModel(
            name='ForgetOTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.CharField(max_length=6, verbose_name='OTP')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Forget OTP',
                'verbose_name_plural': 'Forget OTPs',
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('address', models.TextField(verbose_name='Address')),
                ('license', models.CharField(max_length=16, verbose_name='DL number')),
                ('license_front', models.ImageField(upload_to='driver/license', verbose_name='license front image')),
                ('license_back', models.ImageField(upload_to='driver/license', verbose_name='license back image')),
                ('aadhar_no', models.CharField(help_text='Only numbers are allowed.', max_length=12, validators=[django.core.validators.RegexValidator(message='Aadhar Number must be number!!!', regex='^[0-9]*$'), django.core.validators.MinLengthValidator(12, 'Aadhar number'), django.core.validators.MaxLengthValidator(12, 'Aadhar number')], verbose_name='Aadhar Number')),
                ('pan_no', models.CharField(blank=True, max_length=10, null=True, validators=[Master.myvalidator.pan_validator], verbose_name='Pan Number')),
                ('aadhar_document', models.FileField(help_text='Upload Aadhar card.', upload_to='driver/aadhar', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'png', 'jpg', 'jpeg', 'webp'])], verbose_name='Aadhar Document')),
                ('pan_document', models.FileField(help_text='Upload Pan card.', upload_to='driver/pan', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf', 'png', 'jpg', 'jpeg', 'webp'])], verbose_name='Pan Document')),
                ('vehicle_no', models.CharField(max_length=10, verbose_name='vehicle number')),
                ('approved', models.BooleanField(default=False, verbose_name='Approved')),
                ('is_free', models.BooleanField(default=True, verbose_name='Is Free')),
                ('warehouse_assigned', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drivers', to='Auth.warehouse', verbose_name='warehouse')),
            ],
            options={
                'verbose_name': 'Driver',
                'verbose_name_plural': 'Drivers',
            },
            bases=('Auth.user',),
        ),
    ]
